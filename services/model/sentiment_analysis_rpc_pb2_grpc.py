# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from services.model import sentiment_analysis_rpc_pb2 as services_dot_model_dot_sentiment__analysis__rpc__pb2


class ShowMessageStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.show = channel.unary_unary(
        '/ShowMessage/show',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class ShowMessageServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def show(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ShowMessageServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'show': grpc.unary_unary_rpc_method_handler(
          servicer.show,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ShowMessage', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SentimentIntensityAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.intensivityAnalysis = channel.unary_unary(
        '/SentimentIntensityAnalysis/intensivityAnalysis',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class SentimentIntensityAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def intensivityAnalysis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SentimentIntensityAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'intensivityAnalysis': grpc.unary_unary_rpc_method_handler(
          servicer.intensivityAnalysis,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SentimentIntensityAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class SentimentComplexAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.complexAnalysis = channel.unary_unary(
        '/SentimentComplexAnalysis/complexAnalysis',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class SentimentComplexAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def complexAnalysis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SentimentComplexAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'complexAnalysis': grpc.unary_unary_rpc_method_handler(
          servicer.complexAnalysis,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'SentimentComplexAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class CustomCorpusAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.customCorpusAnalysis = channel.unary_unary(
        '/CustomCorpusAnalysis/customCorpusAnalysis',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class CustomCorpusAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def customCorpusAnalysis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_CustomCorpusAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'customCorpusAnalysis': grpc.unary_unary_rpc_method_handler(
          servicer.customCorpusAnalysis,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'CustomCorpusAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TwitterAnalysisStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.twitterAnalysis = channel.unary_unary(
        '/TwitterAnalysis/twitterAnalysis',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.TwitterInputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class TwitterAnalysisServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def twitterAnalysis(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TwitterAnalysisServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'twitterAnalysis': grpc.unary_unary_rpc_method_handler(
          servicer.twitterAnalysis,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.TwitterInputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TwitterAnalysis', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class TrainDataStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.train = channel.unary_unary(
        '/TrainData/train',
        request_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.SerializeToString,
        response_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.FromString,
        )


class TrainDataServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def train(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TrainDataServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'train': grpc.unary_unary_rpc_method_handler(
          servicer.train,
          request_deserializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.InputMessage.FromString,
          response_serializer=services_dot_model_dot_sentiment__analysis__rpc__pb2.OutputMessage.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'TrainData', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
